<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly Name="$(ProjectDir)..\iGoSharp\bin\Debug\iGoSharp.dll" #>
<#@ assembly Name="$(ProjectDir)..\Interfaces\bin\Debug\Interfaces.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
	var projectDir = new DirectoryInfo(Host.ResolvePath(@".")).FullName;
	var iGoSharp = new iGoSharp.World(typeof(Interfaces.IWriteLine),typeof(TextWriter));
	
#>
namespace iGo{
public static class Extensions
{
    public class TextWriterProxy : Interfaces.IWriteLine
    {
        private readonly System.IO.TextWriter _inObject;

        internal TextWriterProxy(System.IO.TextWriter inObject)
        {
            _inObject = inObject;
        }

        public void WriteLine(string format, params object[] args)
        {
            _inObject.WriteLine(format,args);
        }
    }

    public static Interfaces.IWriteLine xInterfacesIWriteLine(this System.IO.TextWriter inObject)
    {
        return new TextWriterProxy(inObject);
    }
}
}